<%- include('partials/header') -%>
<nav class="navbar navbar-expand-md navbar-light">
  <div class="container-xxl">
    <a class="navbar-brand p-2">  
      <span class="lead text-secondary">
          Climb On - Session Tracker App
      </span>
          <!--toggle button for nav-->
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#main-nav" aria-controls="main-nav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button> 
    </a>

    <!--navbar links--> 
    <div class="collapse navbar-collapse justify-content-end align-center" id="main-nav">
      <ul class="navbar-nav">
        <li class="nav-item">
          <a class="nav-link" href="/session">New Session</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/feed">Feed</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/logout">Logout</a>
        </li>
      </ul>
    </div>
  </div>
</nav>
<h2 class="text-center text-white fw-normal text-capitalize mt-3"><%= session.username %>'s <%= session.createdAt.toLocaleString('en-US', { timeZone: 'UTC', month: 'short', day: 'numeric', year: 'numeric' }) %> 
Climbing Session</h2>
<section class="container-lg">
  <input type="hidden" id="sessionsData" value='<%- JSON.stringify(session) %>'>
  <div class="row">
    <% if (session.climbs.some(climb => climb.typeOfClimb === 'Routes') && session.climbs.some(climb => climb.typeOfClimb === 'Bouldering')) { %>
      <div class="col-md-6">
        <div class="d-flex flex-column align-items-center">
          <canvas id="attemptsChart"></canvas>
        </div>
      </div>
      <div class="col-md-3">
        <canvas id="boulderingChart"></canvas>
      </div>
      <div class="col-md-3">
        <canvas id="routesChart"></canvas>
      </div>
    <% } else if (session.climbs.some(climb => climb.typeOfClimb === 'Routes')) { %>
      <div class="col-md-4">
        <div class="d-flex justify-content-center">
          <canvas id="routesChart"></canvas>
        </div>
      </div>
      <div class="col-md-8">
        <div class="d-flex flex-column align-items-center">
          <canvas id="attemptsChart"></canvas>
        </div>
      </div>
    <% } else if (session.climbs.some(climb => climb.typeOfClimb === 'Bouldering')) { %>
      <div class="col-md-4">
        <div class="d-flex justify-content-center">
          <canvas id="boulderingChart"></canvas>
        </div>
      </div>
      <div class="col-md-8">
        <div class="d-flex flex-column align-items-center">
          <canvas id="attemptsChart"></canvas>
        </div>
      </div>
    <% } else { %>
      <div class="col-md-12">
        <div class="d-flex justify-content-center">
          <p>No data available</p>
        </div>
      </div>
    <% } %>
  </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
        const climbs = JSON.parse('<%- JSON.stringify(session.climbs) %>'); //converts JSON string representation of session.climbs into a object climbs
        const boulderingData = {
        labels: ["VB", "V0", "V1", "V2", "V3", "V4", "V5", "V6", "V7", "V8", "V9", "V10"],
        data: new Array(12).fill(0)
        };

        const routesData = {
        labels: ["5.8", "5.9", "5.9+", "5.10-", "5.10", "5.10+", "5.11-", "5.11", "5.11+", "5.12-", "5.12", "5.12+", "5.13-", "5.13", "5.13+", "5.14-"],
        data: new Array(16).fill(0)
        };

        climbs.forEach(climb => {
        const difficulty = climb.difficulty;
        if (climb.typeOfClimb === 'Bouldering') {
          const difficultyIndex = boulderingData.labels.indexOf(difficulty);
            boulderingData.data[difficultyIndex]++;
        } else {
            routesData.data[routesData.labels.indexOf(difficulty)]++;
        }
        });

      //bouldering pie chart
      const boulderingChart = new Chart(document.getElementById('boulderingChart'), { //creates a new instance of a Chart object using the canvas element with ID 'boulderingChart' as its target.
        type: 'pie',
        data: {
          labels: boulderingData.labels.filter((_, i) => boulderingData.data[i] > 0), 
          //sets the data to be displayed in the chart and filters out any data points with 0 values. 
          //boulderingData.labels contains the label strings for each data point and boulderingData.data contains the corresponding values.
          datasets: [{
        data: boulderingData.data.filter(d => d > 0), //specifies the data to be plotted in the chart, filtering out any data points with 0 values.
        backgroundColor: [
          '#BA8C22',
          '#A32E10',
          '#F3D59E',
          '#742305',
          '#CBA353',
          '#787E83',
          '#A2ACB4',
          '#303D32',
          '#566068',
          '#150508',
          '#1B231C',
          '#BAC9DD'
        ]
      }]
    },
    options: {
      title: {
        display: true,
        text: 'Difficulty Distribution - Bouldering'
      }
    }
  });

  //routes pie chart
  const routesChart = new Chart(document.getElementById('routesChart'), {
    type: 'pie',
    data: {
      labels: routesData.labels.filter((_, i) => routesData.data[i] > 0),
      datasets: [{
        data: routesData.data.filter(d => d > 0),
        backgroundColor: [
          '#BA8C22',
          '#A32E10',
          '#F3D59E',
          '#742305',
          '#CBA353',
          '#787E83',
          '#A2ACB4',
          '#303D32',
          '#566068',
          '#150508',
          '#1B231C',
          '#BAC9DD',
          '#34495e',
          '#95a5a6', 
          '#7f8c8d',
          '#bdc3c7'
        ]
      }]
    },
    options: {
      title: {
        display: true,
        text: 'Difficulty Distribution - Routes'
      }
    }
  });

  //Climbing attempts vs tops bar graph
  const climb = JSON.parse('<%- JSON.stringify(session.climbs) %>'); //converts JSON string representation of session.climbs into a object climbs
  let totalAttempts = 0;
  let totalTops = 0;

  climb.forEach(climb => {
    totalAttempts += parseInt(climb.attempts);
    totalTops += climb.top ? 1 : 0;
  });

  const attemptsChart = new Chart(document.getElementById('attemptsChart'), {
    type: 'bar',
    data: {
      labels: ['Total Attempts', 'Total Tops'],
      datasets: [{
        label: 'Total Attempts and Tops',
        data: [totalAttempts, totalTops],
        backgroundColor: [
          '#BA8C22',
          '#A32E10'
        ]
      }]
    },
    options: {
      legend: { display: false },
      title: {
        display: true,
        text: 'Total Attempts and Tops'
      },
      scales: {
        yAxes: [{
          ticks: {
            beginAtZero: true
          }
        }]
      }
    }
  });
</script>

<div class="row justify-content-center mt-3">
  <% for (let i = 0; i < session.climbs.length; i++) { %>
    <div class="col-md-10 mt-4">
      <div class="card ms-2">
        <div class="row g-0">
          <div class="col-md-4 d-flex align-items-center">
            <% if (session.climbs[i].image) { %>
              <img src="<%= session.climbs[i].image %>" class="img-fluid rounded-start" alt="<%= session.climbs[i].typeOfClimb %>">
            <% } else { %>
              <img src="/imgs/Event_StillClosed.jpeg" class="img-fluid rounded-start" alt="default climb image">
            <% } %>
          </div>
          <div class="col-md-8">
            <ul class="card-body">
              <h4 class="card-title text-white text-center">Type of Climb - <%= session.climbs[i].typeOfClimb %></h4>
              <h6 class="text-white text-center" >Difficulty: <%= session.climbs[i].difficulty %></h6>
              <h6 class="text-white text-center">Attempts: <%= session.climbs[i].attempts %></h6>
              <h6 class="text-white text-center">Top: <%= session.climbs[i].top %></h6>
              <% if (session.climbs[i].notes) { %>
                <h6 class="text-white text-center">Notes: <%= session.climbs[i].notes %></h6>
              <% } %>
              <ul class="list-unstyled mb-0 text-center">
                <% const tagSet = new Set(session.climbs[i].tags) %>
                <% for (let tag of tagSet) { %>
                  <span class="badge bg-primary me-1"><%= tag %></span>
                <% } %>
              </ul>
            </ul>
          </div>
        </div>
      </div>
    </div>
  <% } %>
</div>

<%- include('partials/footer') -%>