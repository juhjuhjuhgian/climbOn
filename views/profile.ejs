<a class="btn btn-primary" href="/feed">Feed</a>
<a class="btn btn-primary" href="/logout">Logout</a>
<%- include('partials/header') -%>
<h1 class="text-center">My Profile</h1>
<div class="container">
  <div class="row mt-5">
    <div class="col-6">
      <div>
        <p><strong>User</strong>: <%= user.userName %></p>
        <p><strong>Email</strong>: <%= user.email %></p>
        <a href="/session" class="col-3 btn btn-primary">Log A New Session</a>
        <a href="/logout" class="col-3 btn btn-primary">Logout</a>
      </div>
    </div>

    <input type="hidden" id="sessionsData" value='<%- JSON.stringify(sessions) %>'> <%/*Hidden input field that contains the stringified JSON data of all sessions*/%>
    <section>
      <canvas id="myChart"></canvas> <%/*Canvas element to render the chart*/%>
      <script src="https://cdn.jsdelivr.net/npm/chart.js"></script> <%/*Chart.js library script*/%>
      <script>
        const sessions = JSON.parse(document.getElementById('sessionsData').value); // Parses the JSON data from the hidden input field and assigns it to the sessions variable
        const ctx = document.getElementById('myChart').getContext('2d'); // Retrieves the 2D context of the canvas element
        const labels = []; 
        const data = []; 

        // Loop through the sessions array to count sessions for the last 6 months
        for (let i = 5; i >= 0; i--) {
          const date = new Date(); // Gets current date
          date.setMonth(date.getMonth() - i); // Subtracts the loop index from the current month to get the month for the current iteration
          const month = date.toLocaleString('default', { month: 'long' }); // Formats the month as a long string
          let count = 0; // Initializes the count of sessions for the current month to zero
          sessions.forEach(session => { // Loops through each session
            const sessionDate = new Date(session.createdAt); // Gets the creation date of the current session
            if (session.user === '<%= user.id %>' && sessionDate.getMonth() === date.getMonth() && sessionDate.getFullYear() === date.getFullYear()) { // Checks if current session was created by logged-in user & occurred during current month/year
              count++; 
            }
          });
          labels.push(month); // Adds the month label to the labels array
          data.push(count); // Adds the session count to the data array
        }

        const chartData = { // Object containing the data for the chart
          labels: labels, // The labels array
          datasets: [{
            label: 'Number of Sessions', // The label for the dataset
            backgroundColor: 'rgba(49, 108, 244, 0.2)', // The background color for the dataset
            borderColor: 'rgba(49, 108, 244, 1)', // The border color for the dataset
            borderWidth: 1, // The border width for the dataset
            data: data // The data array
          }]
        };

        const myChart = new Chart(ctx, { // Initializes new Chart.js chart with the 2D context and chart data
          type: 'bar', // The type of chart
          data: chartData, // The chart data object
          options: {
            scales: {
              yAxes: [{
                ticks: {
                  beginAtZero: true // Sets the y-axis scale to start at zero
                }
              }]
            }
          }
        });
      </script>
    </section>

    <div class="container">
      <div class="row justify-content-center mt-5">
        <ul class="row list-unstyled">
          <% for(var i=0; i<sessions.length; i++) {%>
            <% if (sessions[i].user == user.id) { %>
              <li class="col-7 justify-content-between mt-5">
                <a href="/post/viewSession/<%= sessions[i]._id %>" method="GET">Session Info</a>
                <p><%= sessions[i].createdAt.toLocaleString('en-US', { timeZone: 'UTC', month: 'short', day: 'numeric', year: 'numeric' }) %></p>
                <p>Total number of climbs in this session: <%= sessions[i].climbs.length %></p>
                <!-- Declares variable that holds hardest climb, iterates through each climbs to check if it was topped out-->
                <!-- Then checks what discipline of climbing and if it's harder than the currest hardest climb-->
                <% let hardestBoulder, hardestRoute %>
                <% for (var j = 0; j < sessions[i].climbs.length; j++) { %>
                  <% const climb = sessions[i].climbs[j] %>
                  
                  <% if (climb.top === 'Yes') { %>
                    <% if (climb.typeOfClimb === 'Bouldering' && (!hardestBoulder || climb.difficulty > hardestBoulder.difficulty)) { %>
                      <% hardestBoulder = climb %>
                    <% } else if (climb.typeOfClimb === 'Routes' && (!hardestRoute || climb.difficulty > hardestRoute.difficulty)) { %>
                      <% hardestRoute = climb %>
                    <% } %>
                  <% } %>
                <% } %>
                <!-- Checking to see if either variable is truthy, will display difficulty of hardest climb in that category-->
                <% if (hardestBoulder) { %>
                  <p>Hardest Boulder: <%= hardestBoulder.difficulty %></p>
                <% } %>

                <% if (hardestRoute) { %>
                  <p>Hardest Route: <%= hardestRoute.difficulty %></p>
                <% } %>
                  
                <p>Likes: <%= sessions[i].likes %></p>
                
                <% const tagSet = new Set() %> <!-- Creates a new Set object -->
                  <% for (var j = 0; j < sessions[i].climbs.length; j++) { %>
                  <% const climb = sessions[i].climbs[j] %> 
                    <% for (var k = 0; k < climb.tags.length; k++) { %>
                      <% const tag = climb.tags[k] %>
                        <% if (!tagSet.has(tag)) { %>
                        <% tagSet.add(tag) %>
                        <span class="badge bg-primary"><%= tag %></span>
                        <% } %>
                        <% } %>
                    <% if (climb.image) { %>
                    <span>Boulder Problems and Routes Pics</span>
                    <img class="img-fluid" src="<%= climb.image %>">
                    <% } %>
                  <% } %>

                <form action="/post/deleteSession/<%= sessions[i]._id %>?_method=DELETE" method="POST">
                  <button class="btn btn-primary fa fa-trash" type="submit"></button>
                </form>
              </li>
            <% } %>
          <% } %>
        </ul>
      </div>  
    </div>  
  </div>
</div>
<%- include('partials/footer') -%>